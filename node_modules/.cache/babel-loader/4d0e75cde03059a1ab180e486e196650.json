{"ast":null,"code":"var _jsxFileName = \"/Users/avathorn/repos/TextFSMWeb/text-fsm-web/src/components/ReactFlow/StartNode.jsx\";\nimport React, { memo } from 'react';\nimport { Handle } from 'react-flow-renderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/memo(_c = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: \"left\",\n      style: {\n        background: '#555'\n      },\n      onConnect: params => console.log('handle onConnect', params)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Custom Color Picker Node: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: data.color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"nodrag\",\n      type: \"color\",\n      onChange: data.onChange,\n      defaultValue: data.color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: \"right\",\n      id: \"a\",\n      style: {\n        top: 10,\n        background: '#555'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: \"right\",\n      id: \"b\",\n      style: {\n        bottom: 10,\n        top: 'auto',\n        background: '#555'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n});\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/avathorn/repos/TextFSMWeb/text-fsm-web/src/components/ReactFlow/StartNode.jsx"],"names":["React","memo","Handle","data","background","params","console","log","color","onChange","top","bottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AAEA,SAASC,MAAT,QAAuB,qBAAvB;;;AAEA,kCAAeD,IAAI,MAAC,CAAC;AAAEE,EAAAA;AAAF,CAAD,KAAc;AAChC,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,QAAQ,EAAC,MAFX;AAGE,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAHT;AAIE,MAAA,SAAS,EAAGC,MAAD,IAAYC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,MAAhC;AAJzB;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAA,4DAC4B;AAAA,kBAASF,IAAI,CAACK;AAAd;AAAA;AAAA;AAAA;AAAA,cAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,QAAQ,EAAEL,IAAI,CAACM,QAHjB;AAIE,MAAA,YAAY,EAAEN,IAAI,CAACK;AAJrB;AAAA;AAAA;AAAA;AAAA,YAVF,eAgBE,QAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,QAAQ,EAAC,OAFX;AAGE,MAAA,EAAE,EAAC,GAHL;AAIE,MAAA,KAAK,EAAE;AAAEE,QAAAA,GAAG,EAAE,EAAP;AAAWN,QAAAA,UAAU,EAAE;AAAvB;AAJT;AAAA;AAAA;AAAA;AAAA,YAhBF,eAsBE,QAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,QAAQ,EAAC,OAFX;AAGE,MAAA,EAAE,EAAC,GAHL;AAIE,MAAA,KAAK,EAAE;AAAEO,QAAAA,MAAM,EAAE,EAAV;AAAcD,QAAAA,GAAG,EAAE,MAAnB;AAA2BN,QAAAA,UAAU,EAAE;AAAvC;AAJT;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA,kBADF;AA+BD,CAhCkB,CAAnB","sourcesContent":["import React, { memo } from 'react';\n\nimport { Handle } from 'react-flow-renderer';\n\nexport default memo(({ data }) => {\n  return (\n    <>\n      <Handle\n        type=\"target\"\n        position=\"left\"\n        style={{ background: '#555' }}\n        onConnect={(params) => console.log('handle onConnect', params)}\n      />\n      <div>\n        Custom Color Picker Node: <strong>{data.color}</strong>\n      </div>\n      <input\n        className=\"nodrag\"\n        type=\"color\"\n        onChange={data.onChange}\n        defaultValue={data.color}\n      />\n      <Handle\n        type=\"source\"\n        position=\"right\"\n        id=\"a\"\n        style={{ top: 10, background: '#555' }}\n      />\n      <Handle\n        type=\"source\"\n        position=\"right\"\n        id=\"b\"\n        style={{ bottom: 10, top: 'auto', background: '#555' }}\n      />\n    </>\n  );\n});"]},"metadata":{},"sourceType":"module"}