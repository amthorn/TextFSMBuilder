{"ast":null,"code":"/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var classNames = function () {\n    // don't inherit from Object so we can skip hasOwnProperty check later\n    // http://stackoverflow.com/questions/15518328/creating-js-object-with-object-createnull#answer-21079232\n    function StorageObject() {}\n\n    StorageObject.prototype = Object.create(null);\n\n    function _parseArray(resultSet, array) {\n      var length = array.length;\n\n      for (var i = 0; i < length; ++i) {\n        _parse(resultSet, array[i]);\n      }\n    }\n\n    var hasOwn = {}.hasOwnProperty;\n\n    function _parseNumber(resultSet, num) {\n      resultSet[num] = true;\n    }\n\n    function _parseObject(resultSet, object) {\n      if (object.toString === Object.prototype.toString) {\n        for (var k in object) {\n          if (hasOwn.call(object, k)) {\n            // set value to false instead of deleting it to avoid changing object structure\n            // https://www.smashingmagazine.com/2012/11/writing-fast-memory-efficient-javascript/#de-referencing-misconceptions\n            resultSet[k] = !!object[k];\n          }\n        }\n      } else {\n        resultSet[object.toString()] = true;\n      }\n    }\n\n    var SPACE = /\\s+/;\n\n    function _parseString(resultSet, str) {\n      var array = str.split(SPACE);\n      var length = array.length;\n\n      for (var i = 0; i < length; ++i) {\n        resultSet[array[i]] = true;\n      }\n    }\n\n    function _parse(resultSet, arg) {\n      if (!arg) return;\n      var argType = typeof arg; // 'foo bar'\n\n      if (argType === 'string') {\n        _parseString(resultSet, arg); // ['foo', 'bar', ...]\n\n      } else if (Array.isArray(arg)) {\n        _parseArray(resultSet, arg); // { 'foo': true, ... }\n\n      } else if (argType === 'object') {\n        _parseObject(resultSet, arg); // '130'\n\n      } else if (argType === 'number') {\n        _parseNumber(resultSet, arg);\n      }\n    }\n\n    function _classNames() {\n      // don't leak arguments\n      // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n      var len = arguments.length;\n      var args = Array(len);\n\n      for (var i = 0; i < len; i++) {\n        args[i] = arguments[i];\n      }\n\n      var classSet = new StorageObject();\n\n      _parseArray(classSet, args);\n\n      var list = [];\n\n      for (var k in classSet) {\n        if (classSet[k]) {\n          list.push(k);\n        }\n      }\n\n      return list.join(' ');\n    }\n\n    return _classNames;\n  }();\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","map":{"version":3,"sources":["/Users/avathorn/repos/TextFSMWeb/text-fsm-web/node_modules/classnames/dedupe.js"],"names":["classNames","StorageObject","prototype","Object","create","_parseArray","resultSet","array","length","i","_parse","hasOwn","hasOwnProperty","_parseNumber","num","_parseObject","object","toString","k","call","SPACE","_parseString","str","split","arg","argType","Array","isArray","_classNames","len","arguments","args","classSet","list","push","join","module","exports","default","define","amd","window"],"mappings":"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","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar classNames = (function () {\n\t\t// don't inherit from Object so we can skip hasOwnProperty check later\n\t\t// http://stackoverflow.com/questions/15518328/creating-js-object-with-object-createnull#answer-21079232\n\t\tfunction StorageObject() {}\n\t\tStorageObject.prototype = Object.create(null);\n\n\t\tfunction _parseArray (resultSet, array) {\n\t\t\tvar length = array.length;\n\n\t\t\tfor (var i = 0; i < length; ++i) {\n\t\t\t\t_parse(resultSet, array[i]);\n\t\t\t}\n\t\t}\n\n\t\tvar hasOwn = {}.hasOwnProperty;\n\n\t\tfunction _parseNumber (resultSet, num) {\n\t\t\tresultSet[num] = true;\n\t\t}\n\n\t\tfunction _parseObject (resultSet, object) {\n\t\t\tif (object.toString === Object.prototype.toString) {\n\t\t\t\tfor (var k in object) {\n\t\t\t\t\tif (hasOwn.call(object, k)) {\n\t\t\t\t\t\t// set value to false instead of deleting it to avoid changing object structure\n\t\t\t\t\t\t// https://www.smashingmagazine.com/2012/11/writing-fast-memory-efficient-javascript/#de-referencing-misconceptions\n\t\t\t\t\t\tresultSet[k] = !!object[k];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresultSet[object.toString()] = true;\n\t\t\t}\n\t\t}\n\n\t\tvar SPACE = /\\s+/;\n\t\tfunction _parseString (resultSet, str) {\n\t\t\tvar array = str.split(SPACE);\n\t\t\tvar length = array.length;\n\n\t\t\tfor (var i = 0; i < length; ++i) {\n\t\t\t\tresultSet[array[i]] = true;\n\t\t\t}\n\t\t}\n\n\t\tfunction _parse (resultSet, arg) {\n\t\t\tif (!arg) return;\n\t\t\tvar argType = typeof arg;\n\n\t\t\t// 'foo bar'\n\t\t\tif (argType === 'string') {\n\t\t\t\t_parseString(resultSet, arg);\n\n\t\t\t// ['foo', 'bar', ...]\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\t_parseArray(resultSet, arg);\n\n\t\t\t// { 'foo': true, ... }\n\t\t\t} else if (argType === 'object') {\n\t\t\t\t_parseObject(resultSet, arg);\n\n\t\t\t// '130'\n\t\t\t} else if (argType === 'number') {\n\t\t\t\t_parseNumber(resultSet, arg);\n\t\t\t}\n\t\t}\n\n\t\tfunction _classNames () {\n\t\t\t// don't leak arguments\n\t\t\t// https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n\t\t\tvar len = arguments.length;\n\t\t\tvar args = Array(len);\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\targs[i] = arguments[i];\n\t\t\t}\n\n\t\t\tvar classSet = new StorageObject();\n\t\t\t_parseArray(classSet, args);\n\n\t\t\tvar list = [];\n\n\t\t\tfor (var k in classSet) {\n\t\t\t\tif (classSet[k]) {\n\t\t\t\t\tlist.push(k)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list.join(' ');\n\t\t}\n\n\t\treturn _classNames;\n\t})();\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"]},"metadata":{},"sourceType":"script"}