{"ast":null,"code":"var _jsxFileName = \"/Users/avathorn/repos/TextFSMWeb/text-fsm-web/src/components/ReactFlow/Sidebar.jsx\";\nimport React from 'react';\nimport { Nodes } from \"./Nodes\";\nimport classNames from \"classnames/dedupe\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Sidebar = () => {\n  const onDragStart = (event, nodeType) => {\n    event.dataTransfer.setData('application/reactflow', nodeType);\n    event.dataTransfer.effectAllowed = 'move';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: \"You can drag these nodes to the pane on the left.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), Nodes.map(node => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classNames(\"dndnode\", node['type'], `bg-${node['bg']}`, `text-${node['color']}`, node['name'].toLowerCase()),\n      onDragStart: event => onDragStart(event, node['type']),\n      draggable: true,\n      children: [node['name'], \" Node\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_c = Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/Users/avathorn/repos/TextFSMWeb/text-fsm-web/src/components/ReactFlow/Sidebar.jsx"],"names":["React","Nodes","classNames","Sidebar","onDragStart","event","nodeType","dataTransfer","setData","effectAllowed","map","node","toLowerCase"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAIA,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB,QAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACrCD,IAAAA,KAAK,CAACE,YAAN,CAAmBC,OAAnB,CAA2B,uBAA3B,EAAoDF,QAApD;AACAD,IAAAA,KAAK,CAACE,YAAN,CAAmBE,aAAnB,GAAmC,MAAnC;AACH,GAHD;;AAKA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAKQR,KAAK,CAACS,GAAN,CAAUC,IAAI,iBACV;AACI,MAAA,SAAS,EAAGT,UAAU,CAClB,SADkB,EAElBS,IAAI,CAAC,MAAD,CAFc,EAGjB,MAAKA,IAAI,CAAC,IAAD,CAAO,EAHC,EAIjB,QAAOA,IAAI,CAAC,OAAD,CAAU,EAJJ,EAKlBA,IAAI,CAAC,MAAD,CAAJ,CAAaC,WAAb,EALkB,CAD1B;AAQI,MAAA,WAAW,EAAIP,KAAD,IAAWD,WAAW,CAACC,KAAD,EAAQM,IAAI,CAAC,MAAD,CAAZ,CARxC;AASI,MAAA,SAAS,MATb;AAAA,iBAWMA,IAAI,CAAC,MAAD,CAXV;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CALR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CA9BM;KAAMR,O","sourcesContent":["import React from 'react';\nimport { Nodes } from \"./Nodes\";\nimport classNames from \"classnames/dedupe\";\n\n\n\nexport const Sidebar = () => {\n    const onDragStart = (event, nodeType) => {\n        event.dataTransfer.setData('application/reactflow', nodeType);\n        event.dataTransfer.effectAllowed = 'move';\n    };\n\n    return (\n        <aside>\n            <div className=\"description\">\n                You can drag these nodes to the pane on the left.\n            </div>\n            {\n                Nodes.map(node => (\n                    <div \n                        className={ classNames(\n                            \"dndnode\", \n                            node['type'], \n                            `bg-${node['bg']}`, \n                            `text-${node['color']}`,\n                            node['name'].toLowerCase()\n                        ) }\n                        onDragStart={ (event) => onDragStart(event, node['type']) }\n                        draggable\n                    >\n                        { node['name'] } Node\n                    </div>\n                ))\n            }\n        </aside>\n    );\n};"]},"metadata":{},"sourceType":"module"}